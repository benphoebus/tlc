[{"/Users/benphoebus/Code/tlc/my-app/src/index.js":"1","/Users/benphoebus/Code/tlc/my-app/src/App.js":"2","/Users/benphoebus/Code/tlc/my-app/src/reportWebVitals.js":"3","/Users/benphoebus/Code/tlc/my-app/src/components/NotesList.js":"4","/Users/benphoebus/Code/tlc/my-app/src/components/Note.js":"5","/Users/benphoebus/Code/tlc/my-app/src/components/AddNote.js":"6","/Users/benphoebus/Code/tlc/my-app/src/components/Search.js":"7","/Users/benphoebus/Code/tlc/my-app/src/components/Header.js":"8"},{"size":535,"mtime":1653882689974,"results":"9","hashOfConfig":"10"},{"size":1702,"mtime":1653980062541,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1653882689976,"results":"12","hashOfConfig":"10"},{"size":600,"mtime":1653964844512,"results":"13","hashOfConfig":"10"},{"size":439,"mtime":1653964981013,"results":"14","hashOfConfig":"10"},{"size":1109,"mtime":1653979539576,"results":"15","hashOfConfig":"10"},{"size":364,"mtime":1653888869857,"results":"16","hashOfConfig":"10"},{"size":304,"mtime":1653889378278,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"etqly3",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"/Users/benphoebus/Code/tlc/my-app/src/index.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/App.js",["44"],[],"import { useEffect, useState } from 'react'\nimport { nanoid} from 'nanoid';\nimport axios from 'axios';\nimport './App.css';\nimport NoteList from './components/NotesList'\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\nconst [searchText, setSearchText] = useState('');\nconst [darkMode, setDarkMode] = useState(false);\n\n// useEffect(() => {\n//   axios.get('http://localhost:8080/notes')\n//   .then(response => {\n//     console.log(response.data);\n//   })\n// }, []);\n\n// useEffect(() => {\n//   axios.post('http://localhost:8080/notes/', { notes })\n// }, [notes]);\n\nconst addNote = (text) => {\n   const date = new Date();\n   const time = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n   const newNote = {\n     id: nanoid(),\n     text: text,\n     date: date.toLocaleDateString(),\n     time: time\n   }\n   const newNotes = [newNote, ...notes];\n   setNotes(newNotes);\n   axios.post('http://localhost:8080/notes/', { notes })\n}\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note) => note.id !== id);\n  axios.delete('http://localhost8080/notes/id:')\n  .then(response => {\n    console.log(response.data)\n  })\n  setNotes(newNotes);\n}\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <NoteList\n          notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))}\n          handleAddNote={addNote} \n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",[],"/Users/benphoebus/Code/tlc/my-app/src/reportWebVitals.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/components/NotesList.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/components/Note.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/components/AddNote.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/components/Search.js",[],[],"/Users/benphoebus/Code/tlc/my-app/src/components/Header.js",[],[],{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":19},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]