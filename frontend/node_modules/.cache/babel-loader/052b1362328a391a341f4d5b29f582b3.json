{"ast":null,"code":"import _toConsumableArray from \"/Users/benphoebus/Code/tlc/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/benphoebus/Code/tlc/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benphoebus/Code/tlc/my-app/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport './App.css';\nimport NoteList from './components/NotesList';\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nfunction App() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchText = _useState4[0],\n      setSearchText = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      darkMode = _useState6[0],\n      setDarkMode = _useState6[1];\n\n  useEffect(function () {\n    var savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(function () {\n    localStorage.setItem('react-notes-app-data', JSON.stringify(notes));\n  }, [notes]);\n\n  var addNote = function addNote(text) {\n    var date = new Date();\n    var time = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n    var newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n      time: time\n    };\n    var newNotes = [newNote].concat(_toConsumableArray(notes));\n    setNotes(newNotes);\n  };\n\n  var deleteNote = function deleteNote(id) {\n    var newNotes = notes.filter(function (note) {\n      return note.id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(darkMode && 'dark-mode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    handleToggleDarkMode: setDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Search, {\n    handleSearchNote: setSearchText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(NoteList, {\n    notes: notes.filter(function (note) {\n      return note.text.toLowerCase().includes(searchText);\n    }),\n    handleAddNote: addNote,\n    handleDeleteNote: deleteNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","nanoid","NoteList","Search","Header","App","notes","setNotes","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","text","date","Date","time","getHours","getMinutes","getSeconds","newNote","id","toLocaleDateString","newNotes","deleteNote","filter","note","toLowerCase","includes"],"sources":["/Users/benphoebus/Code/tlc/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { nanoid} from 'nanoid';\nimport './App.css';\nimport NoteList from './components/NotesList'\nimport Search from './components/Search';\nimport Header from './components/Header';\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\nconst [searchText, setSearchText] = useState('');\nconst [darkMode, setDarkMode] = useState(false);\n\nuseEffect(() => {\n  const savedNotes = JSON.parse(\n    localStorage.getItem('react-notes-app-data')\n  );\n  if(savedNotes){\n    setNotes(savedNotes);\n  }\n}, [])\n\nuseEffect(() => {\n  localStorage.setItem(\n    'react-notes-app-data',\n    JSON.stringify(notes)\n  ); \n}, [notes])\n\nconst addNote = (text) => {\n   const date = new Date();\n   const time = date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds();\n   const newNote = {\n     id: nanoid(),\n     text: text,\n     date: date.toLocaleDateString(),\n     time: time\n   }\n   const newNotes = [newNote, ...notes];\n   setNotes(newNotes);\n}\n\nconst deleteNote = (id) => {\n  const newNotes = notes.filter((note) => note.id !== id);\n  setNotes(newNotes);\n}\n\n  return (\n    <div className={`${darkMode && 'dark-mode'}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode}/>\n        <Search handleSearchNote={setSearchText}/>\n        <NoteList\n          notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))}\n          handleAddNote={addNote} \n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAsB,QAAtB;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,SAASC,GAAT,GAAe;EAAA,gBACaL,QAAQ,CAAC,EAAD,CADrB;EAAA;EAAA,IACNM,KADM;EAAA,IACCC,QADD;;EAAA,iBAGqBP,QAAQ,CAAC,EAAD,CAH7B;EAAA;EAAA,IAGRQ,UAHQ;EAAA,IAGIC,aAHJ;;EAAA,iBAIiBT,QAAQ,CAAC,KAAD,CAJzB;EAAA;EAAA,IAIRU,QAJQ;EAAA,IAIEC,WAJF;;EAMfZ,SAAS,CAAC,YAAM;IACd,IAAMa,UAAU,GAAGC,IAAI,CAACC,KAAL,CACjBC,YAAY,CAACC,OAAb,CAAqB,sBAArB,CADiB,CAAnB;;IAGA,IAAGJ,UAAH,EAAc;MACZL,QAAQ,CAACK,UAAD,CAAR;IACD;EACF,CAPQ,EAON,EAPM,CAAT;EASAb,SAAS,CAAC,YAAM;IACdgB,YAAY,CAACE,OAAb,CACE,sBADF,EAEEJ,IAAI,CAACK,SAAL,CAAeZ,KAAf,CAFF;EAID,CALQ,EAKN,CAACA,KAAD,CALM,CAAT;;EAOA,IAAMa,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;IACvB,IAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;IACA,IAAMC,IAAI,GAAGF,IAAI,CAACG,QAAL,KAAkB,GAAlB,GAAwBH,IAAI,CAACI,UAAL,EAAxB,GAA4C,GAA5C,GAAkDJ,IAAI,CAACK,UAAL,EAA/D;IACA,IAAMC,OAAO,GAAG;MACdC,EAAE,EAAE3B,MAAM,EADI;MAEdmB,IAAI,EAAEA,IAFQ;MAGdC,IAAI,EAAEA,IAAI,CAACQ,kBAAL,EAHQ;MAIdN,IAAI,EAAEA;IAJQ,CAAhB;IAMA,IAAMO,QAAQ,IAAIH,OAAJ,4BAAgBrB,KAAhB,EAAd;IACAC,QAAQ,CAACuB,QAAD,CAAR;EACF,CAXD;;EAaA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACH,EAAD,EAAQ;IACzB,IAAME,QAAQ,GAAGxB,KAAK,CAAC0B,MAAN,CAAa,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACL,EAAL,KAAYA,EAAtB;IAAA,CAAb,CAAjB;IACArB,QAAQ,CAACuB,QAAD,CAAR;EACD,CAHD;;EAKE,oBACE;IAAK,SAAS,YAAKpB,QAAQ,IAAI,WAAjB,CAAd;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,SAAS,EAAC,WAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAQ,oBAAoB,EAAEC,WAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,eAEE,oBAAC,MAAD;IAAQ,gBAAgB,EAAEF,aAA1B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,eAGE,oBAAC,QAAD;IACE,KAAK,EAAEH,KAAK,CAAC0B,MAAN,CAAa,UAACC,IAAD;MAAA,OAAUA,IAAI,CAACb,IAAL,CAAUc,WAAV,GAAwBC,QAAxB,CAAiC3B,UAAjC,CAAV;IAAA,CAAb,CADT;IAEE,aAAa,EAAEW,OAFjB;IAGE,gBAAgB,EAAEY,UAHpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,CADF,CADF;AAaD;;AAED,eAAe1B,GAAf"},"metadata":{},"sourceType":"module"}